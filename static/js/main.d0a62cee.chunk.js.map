{"version":3,"sources":["API/LogEntries.js","LogEntryForm.js","App.js","index.js"],"names":["API_URL","listLogEntries","a","fetch","response","json","createEntry","entry","method","headers","body","JSON","stringify","LogEntryForm","locationData","onClose","useState","loading","setLoading","error","setError","useForm","register","handleSubmit","onSubmit","watch","errors","data","latitude","longitude","created","console","log","message","className","htmlFor","name","ref","type","rows","disabled","App","width","height","zoom","viewport","setViewport","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","getEntries","useEffect","mapStyle","mapboxApiAccessToken","onViewportChange","nextViewport","onDblClick","event","lngLat","map","logEntry","key","_id","offsetTop","offsetLeft","onClick","style","dynamicPosition","closeButton","closeOnClick","anchor","title","comments","image","src","alt","Date","visitDate","toLocaleDateString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAAMA,EAAS,iCAIR,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACoBC,MAAMH,GAD1B,cACGI,EADH,yBAEIA,EAASC,QAFb,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAL,EAAA,sEACoBC,MAAMH,EAAS,CAClCQ,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,KANtB,cACGH,EADH,yBASIA,EAASC,QATb,4C,mDCqDQQ,EAzDM,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,QAAa,EAEdC,oBAAS,GAFK,mBAEtCC,EAFsC,KAE7BC,EAF6B,OAGlBF,mBAAS,IAHS,mBAGtCG,EAHsC,KAG/BC,EAH+B,OAIIC,cAA1CC,EAJsC,EAItCA,SAAUC,EAJ4B,EAI5BA,aAGZC,GAPwC,EAIdC,MAJc,EAIPC,OAGzB,uCAAG,WAAOC,GAAP,eAAAzB,EAAA,sEAETgB,GAAW,GACXS,EAAKC,SAAWd,EAAac,SAC7BD,EAAKE,UAAYf,EAAae,UAJrB,SAKYvB,EAAYqB,GALxB,OAKHG,EALG,OAMTC,QAAQC,IAAIF,GACZf,IAPS,kDASTK,EAAS,KAAMa,SACff,GAAW,GAVF,0DAAH,uDAcd,OACI,0BAAMM,SAAUD,EAAaC,GAAWU,UAAU,YAC9C,yBAAKA,UAAU,uBACVf,EAAQ,wBAAIe,UAAU,SAAd,IAAwBf,GAAc,KAC/C,yBAAKe,UAAU,4BACX,2BAAOC,QAAQ,SAAf,UACA,2BAAOC,KAAK,QAAQC,IAAKf,KAE7B,yBAAKY,UAAU,4BACX,2BAAOC,QAAQ,SAAf,cACA,2BAAOC,KAAK,QAAQC,IAAKf,KAE7B,yBAAKY,UAAU,4BACX,2BAAOC,QAAQ,UAAf,WACA,2BAAOC,KAAK,SAASC,IAAKf,KAE9B,yBAAKY,UAAU,4BACX,2BAAOC,QAAQ,aAAf,iBACA,2BAAOC,KAAK,YAAYE,KAAK,OAAOD,IAAKf,KAE7C,yBAAKY,UAAU,4BACX,2BAAOC,QAAQ,YAAf,YACA,8BAAUC,KAAK,WAAWG,KAAM,EAAGF,IAAKf,KAE5C,yBAAKY,UAAU,4BACX,2BAAOC,QAAQ,eAAf,gBACA,8BAAUC,KAAK,cAAcG,KAAM,EAAGF,IAAKf,KAE/C,yBAAKY,UAAU,4BACX,4BAAQM,SAAUvB,GAAUA,EAAU,UAAY,wBCmGvDwB,EAlJH,WAAO,IAAD,EACgBzB,mBAAS,CACvC0B,MAAO,QACPC,OAAQ,QACRf,SAAU,QACVC,UAAW,KACXe,KAAM,KANQ,mBACTC,EADS,KACCC,EADD,OASqB9B,mBAAS,IAT9B,mBASR+B,EATQ,KASIC,EATJ,OAUmBhC,mBAAS,IAV5B,mBAURiC,EAVQ,KAUGC,EAVH,OAWgClC,mBAAS,MAXzC,mBAWTmC,EAXS,KAWSC,EAXT,KAeVC,EAAU,uCAAG,4BAAAnD,EAAA,sEACQD,IADR,OACX8C,EADW,OAEjBC,EAAcD,GAFG,2CAAH,qDAKlBO,qBAAU,WACRD,MAMC,IAgBD,OACE,gBAAC,IAAD,iBACMR,EADN,CAEEU,SAAU,wDACVC,qBAAsB,iGACtBC,iBAAkB,SAAAC,GAAY,OAAIZ,EAAYY,IAC9CC,WAnBqB,SAACC,GAAQ,kBAGFA,EAAMC,OAHJ,GAG1BhC,EAH0B,KAGfD,EAHe,KAKlCwB,EAAoB,CAClBvB,YACAD,gBAeImB,EAAWe,KAAI,SAAAC,GAAQ,OACrB,uBAAKC,IAAKD,EAASE,KACnB,gBAAC,IAAD,CACErC,SAAUmC,EAASnC,SACnBC,UAAWkC,EAASlC,UACpBqC,WAAY,GACZC,YAAa,IAEX,uBAAKjC,UAAU,qBACfkC,QAAS,WACPlB,EAAa,eAEVa,EAASE,KAAM,MAIlB,gBAAC,IAAD,CACEI,MAAO,CACL3B,MAAM,WAAD,OAAaG,EAASD,MAC3BD,OAAO,WAAD,OAAYE,EAASD,WAMjCK,EAAUc,EAASE,KACjB,gBAAC,IAAD,CACA/B,UAAU,oBACVoC,iBAAiB,EACjB1C,SAAUmC,EAASnC,SACnBC,UAAWkC,EAASlC,UACpB0C,aAAa,EACbC,cAAc,EACdzD,QAAS,WACPmC,EAAa,KAEfuB,OAAO,OAEL,uBAAKvC,UAAU,yBACb,0BAAK6B,EAASW,OACd,yBAAIX,EAASY,UACnB,uBAAKzC,UAAU,0BAA0B6B,EAASa,MAAQ,uBAAKC,IAAMd,EAASa,MAAOE,IAAKf,EAASW,QAAY,MACzG,6CAAqB,IAAIK,KAAKhB,EAASiB,WAAWC,wBAGlD,SAOZ9B,EACE,gCACE,gBAAC,IAAD,CACEvB,SAAUuB,EAAiBvB,SAC3BC,UAAWsB,EAAiBtB,UAC5BqC,WAAY,GACZC,YAAa,IAEX,2BACE,gBAAC,IAAD,CACEE,MAAO,CACL3B,MAAM,WAAD,OAAaG,EAASD,MAC3BD,OAAO,WAAD,OAAYE,EAASD,WAKrC,gBAAC,IAAD,CAAOV,UAAU,wBACfoC,iBAAiB,EACjBzC,UAAWsB,EAAiBtB,UAC5BD,SAAUuB,EAAiBvB,SAC3B2C,aAAa,EACbC,cAAc,EACdzD,QAAS,WACPqC,EAAoB,QAGtB,2BACE,gBAAC,EAAD,CAAcrC,QAAS,WACrBqC,EAAoB,MACpBC,KACCvC,aAAcqC,OAIrB,OC7IZ+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d0a62cee.chunk.js","sourcesContent":["const API_URL= 'http://localhost:1337/api/logs';\n//process.env.REACT_APP_API_URL;\n//'http://localhost:1337/api/logs'\n\nexport async function listLogEntries() {\n    const response = await fetch(API_URL);\n    return response.json();\n}\n\nexport async function createEntry(entry){\n    const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(entry),\n    })\n\n    return response.json(); \n}\n","import React, {useState} from 'react'\nimport { useForm } from 'react-hook-form'\n\nimport { createEntry } from './API/LogEntries'\n\nconst LogEntryForm = ({locationData, onClose}) => {\n\n    const [ loading, setLoading ] = useState(false);\n    const [ error, setError ] = useState('');\n    const { register, handleSubmit, watch, errors } = useForm();\n\n\n    const onSubmit = async (data) => { \n        try{\n            setLoading(true);\n            data.latitude = locationData.latitude;\n            data.longitude = locationData.longitude;\n            const created= await createEntry(data);\n            console.log(created)\n            onClose();\n        } catch(error){\n            setError(error.message);\n            setLoading(false); \n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"logEntry\">\n            <div className=\"logEntry__container\">\n                {error ? <h3 className='error'> {error}</h3> : null}\n                <div className='logEntry__container__div'>\n                    <label htmlFor='title' >Title:</label>\n                    <input name='title' ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='image'>Image Url:</label>\n                    <input name='image' ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='rating'>Rating:</label>\n                    <input name=\"rating\" ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='visitDate'>Date Visited:</label>\n                    <input name='visitDate' type='date' ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='comments'>Comment:</label>\n                    <textarea name='comments' rows={3} ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='description'>Description:</label>\n                    <textarea name='description' rows={3} ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <button disabled={loading}>{loading ? 'Loading' : 'Create Log Entry'}</button>\n                </div>\n            </div>             \n        </form>\n    )\n}\n\nexport default LogEntryForm;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport { listLogEntries } from './API/LogEntries'\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport LogEntryForm from './LogEntryForm'\nimport './index.css'\n\nconst App = () => {\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 51.5235,\n    longitude: 0.0760,\n    zoom: 16 \n  }); \n\n  const [ logEntries, setLogEntries] = useState([]);\n  const [ showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null)\n\n//what are expressions\n\n  const getEntries = async ()=>{\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries)\n  };\n\nuseEffect(() =>{\n  getEntries()\n      // (async ()=>{ // Immediately Involked Function Expression IIFE (function(){})()\n      //   const logEntries = await listLogEntries();\n      //   setLogEntries(logEntries)\n      // })();\n\n}, []); // useEffect second argument array of dependencies, So props or state that if were to change, the useEffect would re-render. But only want use effect being rendered on first mount\n\n\nconst showAddMarkerPopup = (event)=>{\n  //find longitude and latitude from event double click\n  //console.log(event.lngLat)\n  const [ longitude, latitude ] = event.lngLat;\n  \n  setAddEntryLocation({\n    longitude,\n    latitude\n  })\n\n  \n  }\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle={'mapbox://styles/taiabrahams/ckduijhd50mly19pamnjba28v'}\n      mapboxApiAccessToken={'pk.eyJ1IjoidGFpYWJyYWhhbXMiLCJhIjoiY2tkdDZ5a2p5MG16dzJ5cm95djlwZnA3YiJ9.Ttv0yUEn3wmU7IqI3Akd9A'}\n      onViewportChange={nextViewport => setViewport(nextViewport)}\n      onDblClick={showAddMarkerPopup}\n    >\n      {\n        logEntries.map(logEntry => (\n          <div key={logEntry._id}>\n          <Marker\n            latitude={logEntry.latitude}\n            longitude={logEntry.longitude}\n            offsetTop={-22}\n            offsetLeft={-12}\n            >\n              <div className=\"reactMapGL__marker\"\n              onClick={()=>{\n                setShowPopup({\n                  //...showPopup, remove spread of popup to allow popups to close when a new one is clicked\n                  [logEntry._id]: true\n                })\n              }}\n              >\n                <PinDropIcon\n                  style={{\n                    width: `6vmin * ${viewport.zoom}`,\n                    height:`6vmin * ${viewport.zoom}`\n                  }}\n                />\n                </div>\n            </Marker>\n            {\n              showPopup[logEntry._id] ? (\n                <Popup\n                className='reactMapGL__popup'\n                dynamicPosition={true}\n                latitude={logEntry.latitude}\n                longitude={logEntry.longitude}\n                closeButton={true}\n                closeOnClick={false}\n                onClose={()=>{\n                  setShowPopup({})\n                }}\n                anchor=\"top\"\n                >\n                  <div className=\"reactMapGL__popupInfo\">\n                    <h3>{logEntry.title}</h3>\n                    <p>{logEntry.comments}</p>\n              <div className=\"reactMapGL__popup__img\">{logEntry.image ? <img src ={logEntry.image} alt={logEntry.title} /> : null}</div>\n                    <small>Visitied on: {new Date(logEntry.visitDate).toLocaleDateString()}</small>\n                  </div>\n                </Popup>\n                ) : null\n            }\n            </div>\n        ))\n      } \n      {\n        \n        addEntryLocation ? (\n          <>\n            <Marker\n              latitude={addEntryLocation.latitude}\n              longitude={addEntryLocation.longitude}\n              offsetTop={-22}\n              offsetLeft={-12}\n              >\n                <div>\n                  <PinDropIcon\n                    style={{\n                      width: `6vmin * ${viewport.zoom}`,\n                      height:`6vmin * ${viewport.zoom}`\n                    }}\n                  />\n                </div>\n            </Marker>\n            <Popup className=\"reactMapGL__popupInfo\"\n              dynamicPosition={true}\n              longitude={addEntryLocation.longitude}\n              latitude={addEntryLocation.latitude}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={()=>{\n                setAddEntryLocation(null)\n              }}\n            >\n              <div>\n                <LogEntryForm onClose={()=>{\n                  setAddEntryLocation(null) //gives latitude and longitude a clean slate for next entry\n                  getEntries()\n                }} locationData={addEntryLocation}/> \n              </div>\n            </Popup>\n          </>\n        ) : null\n\n      }\n      </ReactMapGL>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}