{"version":3,"sources":["API/LogEntries.js","LogEntryForm.js","App.js","index.js"],"names":["process","REACT_APP_API_URL","listLogEntries","a","fetch","response","json","createEntry","logEntry","method","headers","body","JSON","stringify","LogEntryForm","locationData","onClose","useForm","register","handleSubmit","watch","errors","useState","error","setError","loading","setLoading","onSubmit","data","latitude","longitude","message","className","htmlFor","name","ref","type","rows","disabled","App","width","height","zoom","viewport","setViewport","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","getEntries","useEffect","mapStyle","REACT_APP_MAPBOX_MAPSTYLE","mapboxApiAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","onViewportChange","nextViewport","onDblClick","event","lngLat","map","key","_id","offsetTop","offsetLeft","onClick","style","dynamicPosition","closeButton","closeOnClick","anchor","title","comments","image","src","alt","Date","visitDate","toLocaleDateString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa64e5dd.chunk.js","sourcesContent":["const API_URL= process.env.REACT_APP_API_URL;\n\nexport async function listLogEntries() {\n    const response = await fetch(`http://localhost:1337/api/logs`);\n    return response.json();\n}\n\nexport async function createEntry(logEntry){\n    const response = await fetch('http://localhost:1337/api/logs',{\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(logEntry),\n    })\n\n    return response.json();\n}\n","import React, {useState} from 'react'\nimport { useForm } from 'react-hook-form'\nimport { createEntry } from './API/LogEntries'\n\nfunction LogEntryForm({locationData, onClose}) {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const { error, setError } = useState('');\n    const { loading, setLoading } = useState(false);\n\n\n    const onSubmit = async (data) => { \n        data.latitude = locationData.latitude;\n        data.longitude = locationData.longitude;\n        try{\n            setLoading(true);\n            await createEntry(data);\n            onClose();\n        } catch(error){\n            setError(error.message);\n            setLoading(false);\n        }\n        \n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"logEntry\">\n            <div className=\"logEntry__container\">\n                {error ? <h3 className='error'> {error}</h3> : null}\n                <div className='logEntry__container__div'>\n                    <label htmlFor='title' >Title:</label>\n                    <input name='title' ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='image'>Image Url:</label>\n                    <input name='image' ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='rating'>Rating:</label>\n                    <input name=\"rating\" ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='visitDate'>Date Visited:</label>\n                    <input name='visitDate' type='date' ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='Comment'>Comment:</label>\n                    <textarea name='Comment' rows={3} ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <label htmlFor='Description'>Description:</label>\n                    <textarea name='Description' rows={3} ref={register} />\n                </div>\n                <div className='logEntry__container__div'>\n                    <button disabled={loading}>{loading ? 'Loading' : 'Create Log Entry'}</button>\n                </div>\n            </div>             \n        </form>\n    )\n}\n\nexport default LogEntryForm;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport { listLogEntries } from './API/LogEntries'\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport LogEntryForm from './LogEntryForm'\nimport './index.css'\n\nconst App = () => {\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 51.5235,\n    longitude: 0.0760,\n    zoom: 16 \n  });\n\n  const [ logEntries, setLogEntries] = useState([]);\n  const [ showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null)\n\n//what are expressions\n\n  const getEntries = async ()=>{\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries)\n  }\nuseEffect(() =>{\n  getEntries()\n      // (async ()=>{ // Immediately Involked Function Expression IIFE (function(){})()\n      //   const logEntries = await listLogEntries();\n      //   setLogEntries(logEntries)\n      // })();\n\n}, []); // useEffect second argument array of dependencies, So props or state that if were to change, the useEffect would re-render. But only want use effect being rendered on first mount\n\n\nconst showAddMarkerPopup = (event)=>{\n  //find longitude and latitude from event double click\n  //console.log(event.lngLat)\n  const [ longitude, latitude ] = event.lngLat;\n  \n  setAddEntryLocation({\n    longitude,\n    latitude\n  })\n\n  \n  }\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle={process.env.REACT_APP_MAPBOX_MAPSTYLE}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n      onViewportChange={nextViewport => setViewport(nextViewport)}\n      onDblClick={showAddMarkerPopup}\n    >\n      {\n        logEntries.map(logEntry => (\n          <div key={logEntry._id}>\n          <Marker\n            latitude={logEntry.latitude}\n            longitude={logEntry.longitude}\n            offsetTop={-22}\n            offsetLeft={-12}\n            >\n              <div className=\"reactMapGL__marker\"\n              onClick={()=>{\n                setShowPopup({\n                  //...showPopup, remove spread of popup to allow popups to close when a new one is clicked\n                  [logEntry._id]: true\n                })\n              }}\n              >\n                <PinDropIcon\n                  style={{\n                    width: `6vmin * ${viewport.zoom}`,\n                    height:`6vmin * ${viewport.zoom}`\n                  }}\n                />\n                </div>\n            </Marker>\n            {\n              showPopup[logEntry._id] ? (\n                <Popup\n                className='reactMapGL__popup'\n                dynamicPosition={true}\n                latitude={logEntry.latitude}\n                longitude={logEntry.longitude}\n                closeButton={true}\n                closeOnClick={false}\n                onClose={()=>{\n                  setShowPopup({})\n                }}\n                anchor=\"top\"\n                >\n                  <div className=\"reactMapGL__popupInfo\">\n                    <h3>{logEntry.title}</h3>\n                    <p>{logEntry.comments}</p>\n              <div className=\"reactMapGL__popup__img\">{logEntry.image ? <img src ={logEntry.image} alt={logEntry.title} /> : null}</div>\n                    <small>Visitied on: {new Date(logEntry.visitDate).toLocaleDateString()}</small>\n                  </div>\n                </Popup>\n                ) : null\n            }\n            </div>\n        ))\n      } \n      {\n        \n        addEntryLocation ? (\n          <div>\n            <Marker\n              latitude={addEntryLocation.latitude}\n              longitude={addEntryLocation.longitude}\n              offsetTop={-22}\n              offsetLeft={-12}\n              >\n                <div>\n                  <PinDropIcon\n                    style={{\n                      width: `6vmin * ${viewport.zoom}`,\n                      height:`6vmin * ${viewport.zoom}`\n                    }}\n                  />\n                </div>\n            </Marker>\n            <Popup className=\"reactMapGL__popupInfo\"\n              dynamicPosition={true}\n              longitude={addEntryLocation.longitude}\n              latitude={addEntryLocation.latitude}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={()=>{\n                setAddEntryLocation(null)\n              }}\n            >\n              <div>\n                <LogEntryForm onClose={()=>{\n                  setAddEntryLocation(null) //gives latitude and longitude a clean slate for next entry\n                  getEntries()\n                }} locationData={addEntryLocation}/> \n              </div>\n            </Popup>\n          </div>\n        ) : null\n\n      }\n      </ReactMapGL>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}